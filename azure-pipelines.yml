# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '8'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
    cleanDestinationDirectory: false
- task: Gradle@2
  displayName: 'Build groovy'
  inputs:
    gradleWrapperFile: 'groovy/gradlew'
    workingDirectory: '/home/vsts/work/1/s/groovy'
    options: 'shadowjar'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      cd groovy
      cd build
      cd libs
      ls
- task: Bash@3
  displayName: 'Veracode SCA scan'
  inputs:
     targetType: 'inline'
     script: |
          export SRCCLR_SCM_URI=https://github.com/christyson/verademo
          export SRCCLR_API_TOKEN="$(SRCCLR_API_TOKEN)"
          export SRCCLR_SCM_REF=master
          export SRCCLR_SCM_REF_TYPE=branch
          export SRCCLR_SCM_REV=123456
          cd groovy
          curl -sSL https://download.sourceclear.com/ci.sh | bash -s -- scan --update-advisor
- task: Gradle@2
  displayName: 'Build Kotlin'
  inputs:
    gradleWrapperFile: 'kotlin/gradlew'
    workingDirectory: '/home/vsts/work/1/s/kotlin'
    options: 'shadowjar'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      cd kotlin
      cd build
      cd libs
      ls
- task: Bash@3
  displayName: 'Veracode SCA scan'
  inputs:
     targetType: 'inline'
     script: |
          export SRCCLR_SCM_URI=https://github.com/christyson/verademo
          export SRCCLR_API_TOKEN="$(SRCCLR_API_TOKEN)"
          export SRCCLR_SCM_REF=master
          export SRCCLR_SCM_REF_TYPE=branch
          export SRCCLR_SCM_REV=123456
          cd kotlin
          curl -sSL https://download.sourceclear.com/ci.sh | bash -s -- scan --update-advisor
- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Endpoint'
    AnalysisService: 'Veracode'
    veracodeAppProfile: '$(system.teamProject)'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    createSandBox: false
    createProfile: true
    failTheBuildIfVeracodeScanDidNotInitiate: false
    scanStatusCheckInterval: '60'
    importResults: true
    failBuildOnPolicyFail: false
