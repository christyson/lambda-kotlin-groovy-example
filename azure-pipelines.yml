# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Gradle@2
  displayName: 'Build groovy'
  inputs:
    gradleWrapperFile: 'groovy/gradlew'
    workingDirectory: '/home/vsts/work/1/s/groovy'
    options: 'shadowjar'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
- task: Gradle@2
  displayName: 'Build Kotlin'
  inputs:
    gradleWrapperFile: 'kotlin/gradlew'
    workingDirectory: '/home/vsts/work/1/s/kotlin'
    options: 'shadowjar'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
- task: CmdLine@2
  inputs:
    script: |
      java --version
      pwd
      ls
      cd groovy
      ls
      cd ../kotlin
      ls
- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Endpoint'
    AnalysisService: 'Veracode'
    veracodeAppProfile: '$(system.teamProject)'
    version: '$(build.buildNumber)'
    filepath: '$(Build.SourcesDirectory)/build/libs/*.jar'
    createSandBox: false
    createProfile: true
    failTheBuildIfVeracodeScanDidNotInitiate: false
    scanStatusCheckInterval: '60'
    importResults: true
    failBuildOnPolicyFail: false